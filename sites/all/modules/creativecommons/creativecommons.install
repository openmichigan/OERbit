<?php

/**
 * @file
 * Creative Commons Drupal module install file.
 */

/**
 * Implementation of hook_schema().
 */
function creativecommons_schema() {
  $schema['creativecommons_node'] = array(
    'description' => 'Creative Commons license to node mapping.',
    'fields' => array(
      'nid' => array(
        'description' => 'Node identifier.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE
      ),
      'license_uri' => array(
        'description' => 'Creative Commons license uri.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      // from http://creativecommons.org/ns
      'attributionName' => array(
        'description' => 'The name the creator of a Work would like used when attributing re-use.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'attributionURL' => array(
        'description' => 'The URL the creator of a Work would like used when attributing re-use.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'morePermissions' => array(
        'description' => 'The URL where additional permissions or alternative licenses for a Work are available.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      // from http://dublincore.org/documents/dces/
      'title' => array(
        'description' => 'A name given to the work.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'type' => array(
        'description' => 'The nature of genre of the work.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'description' => array(
        'description' => 'An account of the work.',
        'type' => 'text',
        'size' => 'big',
        'not null' => TRUE,
      ),
      'creator' => array(
        'description' => 'An entity primarily responsible for making the work.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'rights' => array(
        'description' => "Copyright holder's name.",
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'date' => array(
        'description' => 'Year of Copyright.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'source' => array(
        'description' => 'Source work URL',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
    ),
    'primary key' => array('nid'),
  );

  $schema['creativecommons_user'] = array(
    'description' => 'Creative Commons license user settings.',
    'fields' => array(
      'uid' => array(
        'description' => 'User identifier.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE
      ),
      'license_type' => array(
        'description' => 'Creative Commons default license type.',
        'type' => 'varchar',
        'length' => 12,
        'not null' => TRUE,
        'default' => '',
      ),
      'jurisdiction' => array(
        'description' => 'Creative Commons default license jurisdiction.',
        'type' => 'varchar',
        'length' => 4,
        'not null' => TRUE,
        'default' => '',
      ),
      // from http://creativecommons.org/ns
      'attributionName' => array(
        'description' => 'The name the User would like used when attributing re-use.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'attributionURL' => array(
        'description' => 'The URL the User would like used when attributing re-use.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
    ),
    'primary key' => array('uid'),
  );

  $schema['cache_creativecommons_api'] = drupal_get_schema_unprocessed('system', 'cache');
  $schema['cache_creativecommons_api']['description'] = 'Cache table for CC API requests.';

  return $schema;
}

/**
 * Implementation of hook_install().
 */
function creativecommons_install() {
  drupal_install_schema('creativecommons');

  drupal_set_message('Creative Commons module enabled');

  // CC lite warning
  if (module_exists('creativecommons_lite')) {
    drupal_set_message(st('To avoid confusion, it is not recommended to have both Creative Commons and Creative Commons Lite enabled at the same time. ' . l('Import from CC Lite', 'admin/settings/creativecommons/import')), 'warning');
  }
}

/**
 * Implementation of hook_uninstall().
 */
function creativecommons_uninstall() {
  // Uninstall database
  drupal_uninstall_schema('creativecommons');

  // Uninstall settings variables
  variable_del('creativecommons_locale');
  variable_del('creativecommons_available_license_types');
  variable_del('creativecommons_available_metadata');
  variable_del('creativecommons_required_metadata');
  variable_del('creativecommons_image_style');
  variable_del('creativecommons_nc_img');
  variable_del('creativecommons_rdf');
  variable_del('creativecommons_arr_text');
  variable_del('creativecommons_search');
  variable_del('creativecommons_node_license_redundant_display');

  // Uninstall site defaults
  variable_del('creativecommons_default_license_type');
  variable_del('creativecommons_default_jurisdiction');
  variable_del('creativecommons_site_license_display');
  variable_del('creativecommons_site_license_additional_text');
  variable_del('creativecommons_site_metadata');

  // Uninstall content type settings
  variable_del('creativecommons_node_types');
}


// Add metadata fields to database schema
function creativecommons_update_1() {
  $ret = array();

  db_add_field($ret, 'creativecommons', 'attributionName', array('type' => 'varchar', 'length' => 255, 'default' => '', 'not null' => TRUE));
  db_add_field($ret, 'creativecommons', 'attributionURL', array('type' => 'varchar', 'length' => 255, 'default' => '', 'not null' => TRUE));
  db_add_field($ret, 'creativecommons', 'title', array('type' => 'varchar', 'length' => 255, 'default' => '', 'not null' => TRUE));
  db_add_field($ret, 'creativecommons', 'type', array('type' => 'varchar', 'length' => 255, 'default' => '', 'not null' => TRUE));
  db_add_field($ret, 'creativecommons', 'description', array('type' => 'text', 'size' => 'big', 'default' => '', 'not null' => TRUE));
  db_add_field($ret, 'creativecommons', 'creator', array('type' => 'varchar', 'length' => 255, 'default' => '', 'not null' => TRUE));
  db_add_field($ret, 'creativecommons', 'rights', array('type' => 'varchar', 'length' => 255, 'default' => '', 'not null' => TRUE));
  db_add_field($ret, 'creativecommons', 'date', array('type' => 'varchar', 'length' => 255, 'default' => '', 'not null' => TRUE));
  db_add_field($ret, 'creativecommons', 'source', array('type' => 'varchar', 'length' => 255, 'default' => '', 'not null' => TRUE));

  return $ret;
}

// Add cc:morePermissions
function creativecommons_update_2() {
  $ret = array();

  db_add_field($ret, 'creativecommons', 'morePermissions', array('type' => 'varchar', 'length' => 255, 'default' => '', 'not null' => TRUE));

  return $ret;
}

// Add User settings
function creativecommons_update_3() {
  db_rename_table($ret, 'creativecommons', 'creativecommons_node');

  $creativecommons_user = array(
    'description' => 'Creative Commons license user settings.',
    'fields' => array(
      'uid' => array(
        'description' => 'User identifier.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE
      ),
      'license_type' => array(
        'description' => 'Creative Commons default license type.',
        'type' => 'varchar',
        'length' => 12,
        'not null' => TRUE,
      ),
      'jurisdiction' => array(
        'description' => 'Creative Commons default license jurisdiction.',
        'type' => 'varchar',
        'length' => 4,
        'not null' => TRUE,
      ),
      // from http://creativecommons.org/ns
      'attributionName' => array(
        'description' => 'The name the User would like used when attributing re-use.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
      ),
      'attributionURL' => array(
        'description' => 'The URL the User would like used when attributing re-use.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
      ),
    ),
    'primary key' => array('uid'),
  );

  db_create_table($ret, 'creativecommons_user', $creativecommons_user);

  return $ret;
}

// Enable new user settings permission for roles with attach license perm
function creativecommons_update_4() {
  $ret = array();
  $result = db_query("SELECT rid, perm FROM {permission} ORDER BY rid");
  while ($role = db_fetch_object($result)) {
    $renamed_permission = preg_replace('/(?<=^|,\ )attach\ creative\ commons(?=,|$)/', 'attach creative commons, use creative commons user defaults', $role->perm);
    if ($renamed_permission != $role->perm) {
      $ret[] = update_sql("UPDATE {permission} SET perm = '$renamed_permission' WHERE rid = $role->rid");
    }
  }

  // Notify user of new permission
  drupal_set_message('The Creative Commons module now has a separate permission for allowing user defaults. It\'s been enabled for roles with the attach creative commons permission.');
  return $ret;
}

// Add API cache table
function creativecommons_update_5() {
  $cache_creativecommons_api = drupal_get_schema_unprocessed('system', 'cache');
  $cache_creativecommons_api['description'] = 'Cache table for CC API requests.';

  db_create_table($ret, 'cache_creativecommons_api', $cache_creativecommons_api);

  // Uninstall old cache API variables
  db_query("DELETE FROM {variable} WHERE name LIKE 'creativecommons_api_%'");

  return $ret;
}

function creativecommons_update_6() {
  $schema = drupal_get_schema('creativecommons_node');
  $ret = array();
  foreach ($schema['fields'] as $field => $data) {
    if (isset($data['default'])) {
      db_change_field($ret, 'creativecommons_node', $field, $field, $data);
    }
  }

  $schema = drupal_get_schema('creativecommons_user');
  foreach ($schema['fields'] as $field => $data) {
    if (isset($data['default'])) {
      db_change_field($ret, 'creativecommons_user', $field, $field, $data);
    }
  }

  return $ret;
}
